/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

// @ts-check

/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // tutorialSidebar: [{type: 'autogenerated', dirName: '.'}],

  // But you can create a sidebar manually
  tutorialSidebar: [
    'index',
    {
      type: 'category',
      label: 'write meson poject',
      link: { type: 'doc', id: 'write/index' },
      items: [
        'write/basic',
        'write/commandline',
        'write/project/target',
        'write/project/executable',
        'write/project/library',
        'write/project/compile',
        'write/project/link',
        'write/project/install',
        {
          type: 'category',
          label: 'code generation',
          items: [
            'write/code_generation/configure_file',
            'write/code_generation/custom_target',
          ],
        },
        'write/syntax',
      ],
    },
    {
      type: 'category',
      label: 'dependency編',
      link: { type: 'doc', id: 'dependency/index' },
      items: [
        'dependency/make_dependency',
        'dependency/use_dependency',
        'dependency/boost',
        {
          type: 'category',
          label: 'subprojects',
          link: { type: 'doc', id: 'dependency/subprojects/index' },
          items: [
            'dependency/subprojects/wrap_file',
            'dependency/subprojects/wrap_file_examples',
            'dependency/subprojects/wrap_db',
          ],
        },
      ],
    },
    {
      type: 'category',
      label: 'build編',
      link: { type: 'doc', id: 'build/index' },
      items: [
        {
          type: 'category',
          label: 'gtk',
          link: { type: 'doc', id: 'build/gtk/index' },
          items: [
            'build/gtk/deps',
            'build/gtk/glib',
            'build/gtk/pkg-config',
            'build/gtk/glib-introspection',
            'build/gtk/glib-gir',
            'build/gtk/gstreamer',
            'build/gtk/gtk4',
            'build/gtk/error',
          ]
        },
        'build/using',
      ],
    },
    {
      type: 'category',
      label: 'toolchain',
      link: { type: 'doc', id: 'toolchain/index' },
      items: [
        'toolchain/nativefile',
        'toolchain/crossfile',
        'toolchain/zig_cc',
      ],
    },
    {
      type: 'category',
      label: 'tips',
      items: [
        'tips/c++2b',
        'tips/github-action',
        'tips/cmake',
        'tips/lsp_formatter',
      ],
    },
    {
      type: 'category',
      label: 'vala編',
      // link: { type: 'doc', id: 'meson_dsl/index' },
      items: [
        'vala/index',
      ],
    },
  ],
};

export default sidebars;
